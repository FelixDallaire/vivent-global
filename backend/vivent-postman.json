{
    "info": {
      "name": "Virtual Event Platform (Sequential)",
      "_postman_id": "f0c1425e-0000-0000-b111-91de845b2c99",
      "description": "A collection for testing the Virtual Event Platform API sequentially.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "1. Register",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpass\"\n}"
          },
          "url": {
            "raw": "{{base_url}}/auth/register",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "auth",
              "register"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "2. Login",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpass\"\n}"
          },
          "url": {
            "raw": "{{base_url}}/auth/login",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "auth",
              "login"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Save token to environment",
              "var jsonData = pm.response.json();",
              "if (jsonData.token) {",
              "    pm.environment.set(\"token\", jsonData.token);",
              "}"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "3. Create Event",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"name\": \"My First Event\",\n  \"mapType\": \"map1\",\n  \"description\": \"A cool event\",\n  \"startDate\": \"2024-12-31\",\n  \"endDate\": \"2025-01-01\"\n}"
          },
          "url": {
            "raw": "{{base_url}}/events",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "events"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"eventId\", jsonData._id);"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "4. List Events",
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{base_url}}/events",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "events"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "5. Get Event By ID",
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{base_url}}/events/{{eventId}}",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "events",
              "{{eventId}}"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "6. Update Event",
        "request": {
          "method": "PATCH",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"description\": \"An updated description\"\n}"
          },
          "url": {
            "raw": "{{base_url}}/events/{{eventId}}",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "events",
              "{{eventId}}"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "7. Create Marker",
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"x\": 100,\n  \"y\": 200,\n  \"type\": \"stage\"\n}"
          },
          "url": {
            "raw": "{{base_url}}/events/{{eventId}}/markers",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "events",
              "{{eventId}}",
              "markers"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"markerId\", jsonData._id);"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "8. List Markers for Event",
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "url": {
            "raw": "{{base_url}}/events/{{eventId}}/markers",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "events",
              "{{eventId}}",
              "markers"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "9. Update Marker",
        "request": {
          "method": "PATCH",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"type\": \"tent\"\n}"
          },
          "url": {
            "raw": "{{base_url}}/markers/{{markerId}}",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "markers",
              "{{markerId}}"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        ],
        "response": []
      },
      {
        "name": "10. Batch Update Markers",
        "request": {
          "method": "PATCH",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{token}}",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"markers\": [\n    { \"markerId\": \"{{markerId}}\", \"type\": \"merchstore\" },\n    { \"markerId\": \"{{markerId}}\", \"x\": 150 }\n  ]\n}"
          },
          "url": {
            "raw": "{{base_url}}/events/{{eventId}}/markers",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "events",
              "{{eventId}}",
              "markers"
            ]
          }
        },
        "event": [
          {
            "listen": "test",
            "script": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        ],
        "response": []
      }
    ]
  }
  